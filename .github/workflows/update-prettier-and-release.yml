name: Update Prettier and Release

on:
  schedule:
    - cron: "17 7 * * *"   # daily at 07:17 UTC â€” change as you like
  workflow_dispatch: {}

concurrency:
  group: update-prettier
  cancel-in-progress: false

permissions:
  contents: write

jobs:
  update-and-release:
    runs-on: ubuntu-latest
    env:
      GH_EMAIL: github-actions[bot]@users.noreply.github.com
      GH_NAME: github-actions[bot]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Determine current & latest Prettier versions
        id: versions
        shell: bash
        run: |
          set -euo pipefail
          if [ ! -f package.json ]; then
            echo "No package.json present; skipping."
            echo "current=" >> "$GITHUB_OUTPUT"
            echo "latest=" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          CURRENT=$(jq -r '.devDependencies.prettier // .dependencies.prettier // ""' package.json)
          CURRENT="${CURRENT#^}"; CURRENT="${CURRENT#~}"
          LATEST=$(npm view prettier version --no-update-notifier --no-fund)
          echo "current=$CURRENT" >> "$GITHUB_OUTPUT"
            echo "latest=$LATEST" >> "$GITHUB_OUTPUT"

      - name: Up to date notice
        if: ${{ steps.versions.outputs.current != '' && steps.versions.outputs.current == steps.versions.outputs.latest }}
        run: echo "Prettier is up to date (v${{ steps.versions.outputs.latest }})."

      - name: Decide dependency section (devDependencies vs dependencies)
        id: sect
        if: ${{ steps.versions.outputs.latest != '' && steps.versions.outputs.current != steps.versions.outputs.latest }}
        shell: bash
        run: |
          if jq -e '.devDependencies.prettier' package.json >/dev/null; then
            echo "section=devDependencies" >> "$GITHUB_OUTPUT"
          else
            echo "section=dependencies" >> "$GITHUB_OUTPUT"
          fi

      - name: Update package.json to latest Prettier
        if: ${{ steps.versions.outputs.latest != '' && steps.versions.outputs.current != steps.versions.outputs.latest }}
        shell: bash
        run: |
          set -euo pipefail
          VER="${{ steps.versions.outputs.latest }}"
          SEC="${{ steps.sect.outputs.section }}"
          tmp=package.json.tmp
          jq --arg v "$VER" --arg s "$SEC" '.[$s].prettier = $v' package.json > "$tmp"
          mv "$tmp" package.json

      - name: Ensure TOML plugin stays installed (if you use it)
        if: ${{ steps.versions.outputs.latest != '' && steps.versions.outputs.current != steps.versions.outputs.latest }}
        shell: bash
        run: |
          if ! jq -e '.devDependencies["prettier-plugin-toml"] // .dependencies["prettier-plugin-toml"]' package.json >/dev/null; then
            npm install
